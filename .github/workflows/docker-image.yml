name: bilibili-daily-task

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *' # UTC 16:00 等于北京 00:00

# 将环境变量定义在顶层，以便所有 job 都能访问
env:
  ASPNETCORE_ENVIRONMENT: ${{ secrets.ENV }}
  Ray_BiliBiliCookies__1: ${{ secrets.COOKIESTR }}
  Ray_BiliBiliCookies__2: ${{ secrets.COOKIESTR_2 }}
  Ray_DailyTaskConfig__NumberOfCoins: 0

jobs:
  # ---
  # 任务 2: 同步到 GitCode
  # ---
  sync-to-gitcode:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史记录，以便推送

      - name: Sync to GitCode
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote add gitcode https://${{ github.repository_owner }}:${{ secrets.GITCODE_TOKEN }}@gitcode.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git
          git push -f --all gitcode

  # ---
  # 任务 3: 执行主要的每日任务
  # ---
  run-daily-task:
    runs-on: ubuntu-latest
    steps:
      - name: Set time zone
        run: sudo timedatectl set-timezone 'Asia/Shanghai'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python dependencies & test
        run: |
          python -m pip install --upgrade pip
          pip install requests cryptography resend exchangelib msal
          python bing.py && python git.py || true

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build & run with Maven
        env:
          BILI_JCT: ${{ secrets.BILI_JCT }}
          DEDEUSERID: ${{ secrets.DEDEUSERID }}
          SESSDATA: ${{ secrets.SESSDATA }}
          SCKEY: ${{ secrets.SCKEY }}
          TELEGRAMBOTTOKEN: ${{ secrets.TELEGRAMBOTTOKEN }}
          TELEGRAMCHATID: ${{ secrets.TELEGRAMCHATID }}
          TZ: Asia/Shanghai
        run: |
          mvn compile exec:java \
            -Dexec.mainClass="top.misec.Main" \
            -Dexec.args="${DEDEUSERID} ${SESSDATA} ${BILI_JCT} ${SCKEY} ${TELEGRAMBOTTOKEN} ${TELEGRAMCHATID}"

      - name: Download & run BiliBiliToolPro
        run: |
          set -e
          LATEST=$(curl --retry 3 -s https://api.github.com/repos/RayWangQvQ/BiliBiliToolPro/releases/latest) || {
            echo "::warning::获取 BiliBiliToolPro 最新版本失败，跳过该步骤"
            exit 0
          }
          DL_URL=$(echo "$LATEST" | jq -r '.assets[] | select(.name | endswith("linux-x64.zip")).browser_download_url')
          [ -z "$DL_URL" ] && {
            echo "::warning::未找到 linux-x64.zip 下载地址，跳过该步骤"
            exit 0
          }
          wget "$DL_URL" -O tool.zip
          unzip -o tool.zip -d tool
          EXEC=$(find tool -name "Ray.BiliBiliTool.Console" -type f)
          chmod +x "$EXEC"
          "$EXEC" --runTasks=Daily
          "$EXEC" --runTasks=Manga
